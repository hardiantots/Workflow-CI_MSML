name: MLflow Model

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  MLFLOW_EXPERIMENT_ID: 0
  MODEL_NAME: mlflows_model

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Conda + Python 3.12
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-activate-base: false
        activate-environment: mlflow-env
        environment-file: MLProject/conda.yaml
        python-version: 3.12

    - name: Verify Environment
      shell: bash -l {0}
      run: |
        echo "Working dir: $(pwd)"
        which python
        python --version
        mlflow --version
        echo "Conda env: $CONDA_DEFAULT_ENV"

    - name: Run MLflow Project
      shell: bash -l {0}
      run: |
        mlflow run MLProject -P data_path=Bank_Personal_Loan/Bank_Personal_Loan_preprocessing.csv

    - name: Get latest MLflow Run ID
      id: get_run
      shell: bash -l {0}
      run: |
        RUN_ID=$(mlflow runs list --experiment-id $MLFLOW_EXPERIMENT_ID | tail -n 1 | awk '{print $NF}')
        echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
        echo "MLflow Run ID: $RUN_ID"

    - name: Commit and Push MLflow Artifacts
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        echo "Menyinkronkan dengan remote repository..."
        git pull --rebase
        
        echo "Menambahkan artefak baru ke staging..."
        git add mlruns
        
        if git diff --staged --quiet; then
          echo "Tidak ada artefak baru untuk di-commit."
        else
          echo "Membuat commit untuk artefak baru..."
          # Pesan commit berisi [skip ci] untuk mencegah infinite loop
          git commit -m "ci: Upload MLflow artifacts for Run ID ${{ env.RUN_ID }} [skip ci]"
          
          echo "Mendorong artefak ke repository..."
          git push
        fi

    - name: Build Docker Image from MLflow Model
      shell: bash -l {0}
      run: |
        mlflow models build-docker -m runs:/${{ env.RUN_ID }}/model -n $MODEL_NAME

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Tag Docker Image
      run: |
        docker tag $MODEL_NAME ${{ secrets.DOCKER_USERNAME }}/$MODEL_NAME:latest
        docker tag $MODEL_NAME ${{ secrets.DOCKER_USERNAME }}/$MODEL_NAME:${{ github.sha }}

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/$MODEL_NAME:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/$MODEL_NAME:${{ github.sha }}
