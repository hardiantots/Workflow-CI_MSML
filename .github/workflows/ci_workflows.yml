name: MLflow Model

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    permissions:   
      contents: write

    steps:
    - name: Run actions/checkout@v3
      uses: actions/checkout@v3

    - name: Set up Python 3.12.7
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-activate-base: false
        activate-environment: mlflow-env
        environment-file: MLProject/conda.yaml
        python-version: 3.12

    - name: Check Env
      shell: bash -l {0}
      run: |
        echo "Current working directory: $(pwd)"
        echo "Python version: $(python --version)"
        echo "MLflow version: $(mlflow --version)"
        echo "Conda environment: $CONDA_DEFAULT_ENV"

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        echo "Conda environment activated: $CONDA_DEFAULT_ENV"

    - name: Run mlflow project
      shell: bash -l {0}
      run: |
        mlflow run MLProject --env-manager local -P data_path=Bank_Personal_Loan_preprocessing.csv

    - name: Extract MLflow run ID from file
      shell: bash -l {0}
      run: |
        RUN_ID=$(cat MLProject/run_id.txt)
        echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
        echo "Found MLflow Run ID: $RUN_ID"

    - name: Set MLflow Experiment ID
      run: echo "MLFLOW_EXPERIMENT_ID=0" >> $GITHUB_ENV

    - name: Get latest MLflow run_id
      id: get_run
      shell: bash -l {0}
      run: |
        echo "--- Raw output of mlflow runs list for experiment ID ${{ env.MLFLOW_EXPERIMENT_ID }} ---"
        mlflow runs list --experiment-id ${{ env.MLFLOW_EXPERIMENT_ID }}
        echo "--------------------------------------"

        RUN_ID=$(mlflow runs list --experiment-id ${{ env.MLFLOW_EXPERIMENT_ID }} | tail -n 1 | awk '{print $NF}')
        echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
        echo "Found MLflow Run ID: $RUN_ID"

    - name: Commit and Push MLflow Artifacts
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        echo "Menyinkronkan dengan remote repository..."
        git pull --rebase
        
        echo "Menambahkan artefak baru ke staging..."
        git add mlruns
        
        if git diff --staged --quiet; then
          echo "Tidak ada artefak baru untuk di-commit."
        else
          echo "Membuat commit untuk artefak baru..."
          # Pesan commit berisi [skip ci] untuk mencegah infinite loop
          git commit -m "ci: Upload MLflow artifacts for Run ID ${{ env.RUN_ID }} [skip ci]"
          
          echo "Mendorong artefak ke repository..."
          git push
        fi

    - name: Build Docker Model
      shell: bash -l {0}
      run: |
        mlflow models build-docker -m runs:/${{ env.RUN_ID }}/model -n mlflow_model

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Tag Docker Image
      run: docker tag mlflow_model ${{ secrets.DOCKER_USERNAME }}/mlflow_model:latest

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/mlflow_model:latest
